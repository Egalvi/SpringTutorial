<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

    <aop:config>
        <!-- for all methods of a class -->
        <aop:aspect id="log" ref="logging">
            <aop:pointcut id="selectAll"
                          expression="execution(* ru.egalvi.springtutorial.aop.xml.*.*(..))"/>
            <aop:before pointcut-ref="selectAll" method="beforeAdvice"/>
            <aop:after pointcut-ref="selectAll" method="afterAdvice"/>
            <aop:after-returning pointcut-ref="selectAll"
                                 returning="retVal"
                                 method="afterReturningAdvice"/>
            <aop:after-throwing pointcut-ref="selectAll"
                                throwing="ex"
                                method="AfterThrowingAdvice"/>
        </aop:aspect>

        <!-- for one method of a class -->
        <aop:aspect id="log1" ref="logging">
            <aop:pointcut id="selectOne"
                          expression="execution(* ru.egalvi.springtutorial.aop.xml.Student.getName(..))"/>
            <aop:before pointcut-ref="selectOne" method="beforeAdvice"/>
            <aop:after pointcut-ref="selectOne" method="afterAdvice"/>
        </aop:aspect>
    </aop:config>

    <!-- Definition for student bean -->
    <bean id="student" class="ru.egalvi.springtutorial.aop.xml.Student">
        <property name="name"  value="Zara" />
        <property name="age"  value="11"/>
    </bean>

    <!-- Definition for logging aspect -->
    <bean id="logging" class="ru.egalvi.springtutorial.aop.xml.Logging"/>

    <!--
    <aop:config>
        <aop:aspect id="myAspect" ref="aBean">
            <aop:pointcut id="businessService"
                          expression="execution(* com.xyz.myapp.service.*.*(..))"/>

            <! a before advice definition  >
            <aop:before pointcut-ref="businessService"
                        method="doRequiredTask"/>

            <! an after advice definition  >
            <aop:after pointcut-ref="businessService"
                       method="doRequiredTask"/>

            <! an after-returning advice definition  >
            <!The doRequiredTask method must have parameter named retVal  >
            <aop:after-returning pointcut-ref="businessService"
                                 returning="retVal"
                                 method="doRequiredTask"/>

            <! an after-throwing advice definition  >
            <!The doRequiredTask method must have parameter named ex  >
            <aop:after-throwing pointcut-ref="businessService"
                                throwing="ex"
                                method="doRequiredTask"/>

            <! an around advice definition  >
            <aop:around pointcut-ref="businessService"
                        method="doRequiredTask"/>
            ...
        </aop:aspect>
    </aop:config>
    -->
</beans>